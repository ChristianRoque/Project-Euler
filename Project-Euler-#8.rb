# def largest_in_series(series,n)
#     group_arr = []
#     limit = series.length - n
#     integer_arr = series.split("").map {|string| string.to_i }
#     (0..limit).each {|idx| group_arr << integer_arr[idx...idx + n]}
  
#     i = 0
#     while i < group_arr.length
#       group_arr[i] = group_arr[i].reduce(1) {|product,num| product *= num }
#       i += 1
#     end
#     return group_arr.max
#   end


#   puts largest_in_series("73167176531330624919225119674426574742
#   35534919493496983520312774506326239578318016984801869478851843858
#   615607891129494954595017379583319528532088055111254069874715852386
#   305071569329096329522744304355766896648950445244523161731856403098
#   711121722383113622298934233803081353362766142828064444866452387493
#   0358907296290491560440772390713810515859307960866701724271218839987
#   9790879227492190169972088809377665727333001053367881220235421809751
#   2545405947522435258490771167055601360483958644670632441572215539753
#   69781797784617406495514929086256932197846862248283972241375657056057
#   4902614079729686524145351004748216637048440319989000889524345065854
#   2275886668811642717147992444292823086346567481391912316282458617866
#   4583591245665294765456828489128831426076900422421902267105562632111
#   1109370544217506941658960408071984038509624554443629812309878799272
#   4428490918884580156166097919133875499200524063689912560717606058861
#   1646710940507754100225698315520005593572972571636269561882670428252
#   483600823257530420752963450",13)
